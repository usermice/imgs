apiVersion: autoscaling/v2    # 版本号
kind: HorizontalPodAutoscaler   # 类型
metadata:   # 元数据 
  namespace: default    # 指定名称空间、默认default
  name: hpa-template
spec:
  minReplicas: 2   # 最小Pod数量
  maxReplicas: 10    # 最大Pod数量
  metrics:
  - resource:
      name: cpu  	# 扩缩容名称
      target:
        averageUtilization: 30  	# 设置CPU使用百分比，超过就扩容
        type: Utilization   # 利用率：Utilization，平均值：AverageValue：1k、1M、1G
    type: Resource
  scaleTargetRef:    # 指定要控制Pod、Deployment信息
    apiVersion: apps/v1
    kind: Deployment
    name: deployment-template

---

apiVersion: v1
kind: Service
metadata:
 name: service-template
 namespace: default
spec:
  selector:
    name: deployment-nginx-template
#  clusterIP: None       # 将clusterIP设置为None，即可创建headliness Service
  type: NodePort  	# Pod使用的IP类型：ClusterIP、NodePort
  ports:
  - port: 80    # Service的端口
    targetPort: 80      # StatefulSet 的Pod端口

---

apiVersion: apps/v1     # 版本号 
kind: Deployment        # 类型 
metadata:       # 元数据 
  name: deployment-template     # deployment的名称
  namespace: default    # 指定名称空间、默认default
  labels:       # 标签 
    name: deployment-nginx-template
spec:   # 详情描述 
  replicas: 3   # 副本数量 
  revisionHistoryLimit: 3       # 保留历史版本，默认为10 
  paused: false         # 暂停部署，默认是false 
  progressDeadlineSeconds: 600          # 部署超时时间（s），默认是600
  strategy:     # pod更新策略，即如何替换已有的pod
    type: RollingUpdate         # 更新策略、支持 Recreate, RollingUpdate。默认RollingUpdate
    rollingUpdate:      # 当type为RollingUpdate的时候生效，用于为rollingUpdate设置参数
      maxUnavailable: 30%       # 用来指定在升级过程中不可用的Pod的最大数量，默认为25%。
      maxSurge: 30%     # 用来指定在升级过程中可以超过期望的Pod的最大数量，默认为25%
  selector:     # 选择器，通过它指定该控制器管理哪些pod 
    matchLabels:        # Labels匹配规则，matchExpressions：Expressions匹配规则 
      name: deployment-nginx-template 
  template:     # 模板，当副本数量不足时，会根据下面的模板创建pod副本 
    metadata:
      labels:   # Pod 的标签
        name: deployment-nginx-template
    spec:   # Pod 的期望信息
      containers:   # Pod 容器描述
      - name: nginx   # 镜像名称
        image: nginx:1.17.1
        imagePullPolicy: IfNotPresent   # IfNotPresent：如果镜像不存在就拉取
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
      restartPolicy: Always   # 重启策略，Always：代表一直重启
      terminationGracePeriodSeconds: 30   # 删除操作宽限时间
