apiVersion: v1
kind: Namespace
metadata:
  name: kube-logs-elk

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logs
  namespace: kube-logs-elk
  labels:
    name: elasticsearch-logs
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: db
  selector:
    name: elasticsearch-logs

---
apiVersion: v1
kind: ServiceAccount 
metadata:
  name: elasticsearch-logs
  namespace: kube-logs-elk
  labels:
    name: elasticsearch-logs
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elasticsearch-logs
  labels:
    name: elasticsearch-logs
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: kube-logs-elk
  name: elasticsearch-logs
  labels:
    name: elasticsearch-logs
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch-logs
  namespace: kube-logs-elk
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-logs
  apiGroup: ""

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-logs
  namespace: kube-logs-elk
  labels:
    name: elasticsearch-logs
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    srv: srv-elasticsearch
spec:
  serviceName: elasticsearch-logs    # 云 svc相关联，可以确保使用一下DNS地址访问 Statefulset中的每个Pods (es-cluster-[0~2].elasticsearch.elk.svc.cluster.local)
  replicas: 2
  selector:
    matchLabels:
      name: elasticsearch-logs    # 和Pods template设置的labels相匹配
  template:
    metadata:
      labels:
        name: elasticsearch-logs
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: elasticsearch-logs
      containers:
      - name: elasticsearch-logs
        image: docker.io/library/elasticsearch:7.9.3
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-logs
          mountPath: /usr/share/elasticsearch/data/   # 容器内部挂载地址
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "discovery.type"    # 定义单节点类型
          value: "single-node"
        - name: ES_JAVA_OPTS    # 设置Java的内存参数，可以适当进行加大调整
          value: "-Xms512m -Xmx2g"
      volumes:
      - name: elasticsearch-logs
        hostPath:
          path: /opt/data/es
      nodeSelector:   # 匹配nodes节点下，key是：es，value是：data 的标签，如果需要匹配落盘节点可以添加： nodeSelect
        es: data
      tolerations:
      - effect: NoSchedule
        operator: Exists
      initContainers:   # 容器初始化检查
      - name: elasticsearch-logs-init
        image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]    # 添加mmap计数限制，太低可能造成内存不足错误，在虚拟机中执行：sysctl -w vm.max_map_count=262114
        securityContext:    # 仅应用到指定的容器上，并且不会影响 volume
          privileged: true    # 允许特权容器
      - name: increase-fd-ulimit
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "ulimit -n 65535"]    # 修改文件描述符最大数量
        securityContext:
          privileged: true
      - name: elasticsearch-volume-init   # es数据落盘初始化，加上777权限
        image: alpine:3.6
        command:
        - chmod
        - -R
        - "777"
        - /usr/share/elasticsearch/data/
        volumeMounts:
        - name: elasticsearch-logs
          mountPath: /usr/share/elasticsearch/data/

