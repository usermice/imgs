apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: kube-logs-elk
spec:
  ports:
  - port: 5044
    targetPort: beats
  selector:
    name: logstash
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: kube-logs-elk
spec:
  selector:
    matchLabels:
      name: logstash
  template:
    metadata:
      labels:
        name: logstash
        srv: srv-logstash
    spec:
      containers:
      - name: logstash
        image: docker.io/kubeimages/logstash:7.9.3    # 该镜像支持 arm64 和 amd64 两种架构
        ports:
        - containerPort: 5044
          name: beats
        command:
        - logstash
        - '-f'
        - '/etc/logstash_c/logstash.conf'
        env:
        - name: "XPACK_MONITORING_ELASTICSEARCH_HOSTS"
          value: "http://elasticsearch-logs:9200"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/logstash_c/
        - name: config-yaml-volume
          mountPath: /usr/share/logstash/config/
        - name: timezone
          mountPath: /etc/localtime
        resources:    # logstash 一定要加上资源限制，避免对其他服务造成资源抢占影响
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 700m
            memory: 1024Mi
      # initContainers:   # 容器初始化检查
      # - name: logstash-logs-init
      #  image: alpine:3.6
      #  command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]    # 添加mmap计数限制，太低可能造成内存不足错误，在虚拟机中执行：sysctl -w vm.max_map_count=262114
      #  securityContext:    # 仅应用到指定的容器上，并且不会影响 volume
      #    privileged: true    # 允许特权容器
      volumes:
      - name: config-volume
        configMap:
          name: logstash-conf   # 引用 ConfigMap 中的 logstash.conf 配置
          items:
          - key: logstash.conf    # 对应 ConfigMap 中 data 下的logstash.conf 配置
            path: logstash.conf
      - name: timezone
        hostPath:
          path: /etc/localtime
      - name: config-yaml-volume
        configMap:
          name: logstash-yaml   # 引用 ConfigMap 中的 logstash-yaml 配置
          items:
          - key: logstash.yaml    # 对应 ConfigMap 中的 logstash.yaml 配置
            path: logstash.yaml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-conf
  namespace: kube-logs-elk
  labels:
    name: logstash
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
      }
    }
    filter {
      # 处理 Ingress 日志
      if [kubernetes][container][name] == "nginx-ingress-controller" {
        json {
          source => "message"
          target => "ingress_log"
        }
        if [ingress_log][requesttime] {
          mutate {
            convert => ["[ingress_log][requesttime]", "float"]
          }
        }
        if [ingress_log][upstreamtime] {
          mutate {
            convert => ["[ingress_log][upstreamtime]", "float"]
          }
        }
        if [ingress_log][status] {
          mutate {
            convert => ["[ingress_log][status]", "float"]
          }
        }
        if [ingress_log][httphost] and [ingress_log][uri] {
          mutate {
            add_field => {"[ingress_log][entry]" => "%{[ingress_log][httphost]}%{[ingress_log][uri]}"}
          }
          mutate {
            split => ["[ingress_log][entry]","/"]
          }
          if [ingress_log][entry][1] {
            mutate {
              add_field => {"[ingress_log][entrypoint]" => "%{[ingress_log][entry][0]}/%{[ingress_log][entry][1]}"}
              remove_field => "[ingress_log][entry]"
            }
          } else {
            mutate {
              add_field => {"[ingress_log][entrypoint]" => "%{[ingress_log][entry][0]/}"}
              remove_field => "[ingress_log][entry]"
            }
          }
        }
      }
      # 处理以 srv 进行开头的业务服务日志
      if [kubernetes][container][name] =~ /^srv*/ {
        json {
          source => "message"
          target => "tmp"
        }
        if [kubernetes][namespace] == "kube-logs-elk" {
          drop {}
        }
        if [tmp][level] {
          mutate {
            add_field => {"[applog][level]" => "%{[tmp][level]}"}
          }
          if [applog][level] == "debug" {
            drop {}
          }
        }
        if [tmp][msg] {
          mutate {
            add_field => {"[applog][msg]" => "%{[tmp][msg]}"}
          }
        }
        if [tmp][func] {
          mutate {
            add_field => {"[applog][func]" => "%{[tmp][func]}"}
          }
        }
        if [tmp][cost] {
          if "ms" in [tmp][cost] {
            mutate {
              split => ["[tmp][cost]","m"]
              add_field => {"[applog][cost]" => "%{[tmp][cost][0]}"}
              convert => ["[applog][cost]","float"]
            }
          } else {
            mutate {
              add_field => {"[applog][cost]" => "%{[tmp][cost]}"}
            }
          }
        }
        if [tmp][method] {
          mutate {
            add_field => {"[applog][method]" => "%{[tmp][method]}"}
          }
        }
        if [tmp][request_url] {
          mutate {
            add_field => {"[applog][request_url]" => "%{[tmp][request_url]}"}
          }
        }
        if [tmp][meta._id] {
          mutate {
            add_field => {"[applog][traceId]" => "%{[tmp][meta._id]}"}
          }
        }
        if [tmp][project] {
          mutate {
            add_field => {"[applog][project]" => "%{[tmp][project]}"}
          }
        }
        if [tmp][time] {
          mutate {
            add_field => {"[applog][time]" => "%{[tmp][time]}"}
          }
        }
        if [tmp][status] {
          mutate {
            add_field => {"[applog][status]" => "%{[tmp][status]}"}
            convert => ["[applog][status]","float"]
          }
        }
      }
      mutate {
        rename => ["kubernetes", "k8s"]
        remove_field => "beat"
        remove_field => "tmp"
        remove_field => "[k8s][labels][app]"
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-logs:9200"]
        codec => json
        index => "logstash-%{+YYYY.MM.dd}"
      }
      #      stdout {
      #        codec=>rubydebug
      #      }
    }

  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-yaml
  namespace: kube-logs-elk
  labels:
    name: logstash
data:
  logstash.yaml: |-
    http.host: "0.0.0.0"
    xpack.monitoring.elasticsearch.hosts: http://elasticsearch-logs:9200
